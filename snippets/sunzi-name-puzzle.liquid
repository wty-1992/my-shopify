{% comment %}
** @name 名字拼图积木 **
** @version 1.0.0 **
** @author 罗稼泓 **
** @integrate 罗稼泓 王天宇 **
{% endcomment %}

{% comment %} 引入公共插槽v2.0 {% endcomment %}
{% include 'sunzi-slot-template-2' %}

{% comment %} 核心库版本 {% endcomment %}
{% assign coreJs = 'name-puzzle-v1.0.0-beta.js' %}
{% comment %} 定制化数据地址 {% endcomment %}
{% assign requestURL = 'https://wuxian-chanpin.oss-accelerate.aliyuncs.com/sunzi/name-puzzle.json' %}
{% if product.tags contains 'custom-type-lower-case' %}
{% assign requestURL = 'https://wuxian-chanpin.oss-accelerate.aliyuncs.com/sunzi/name-puzzle-upper-lower-case.json' %}
{% endif %}

{% comment %}变体元素{% endcomment %}
{% comment %}文字数量变体{% endcomment %}
{% assign variantCount = 0 %}
{% comment %}颜色变体{% endcomment %}
{% assign variantColor = 100 %}
{% if product.tags contains 'custom-sunzi-type-color' %}
{% assign variantCount = 1 %}
{% assign variantColor = 0 %}
{% endif %}


{% comment %} 样式补充&修正 {% endcomment %}
<style type="text/css">

</style>

{% comment %} 定制化表单 {% endcomment %}
<div class="sunzi-form">
  {% comment %} 额外的表单参数 {% endcomment %}

  {% comment %} 标记订单来源 {% endcomment %}
  {% assign from = coreJs | split: '-v' %}
  <input type="hidden" name="properties[_from]" value="sunzi-{{ from[0] }}" />
  
  {% comment %} 默认表单参数 {% endcomment %}
  <input type="text" id="sunzi-input" name="properties[customInfo]" required="required"></input>
  <input type="hidden" id="sunzi-cart" name="properties[_sunzi_cart]" />

  {% comment %} 定制按钮 {% endcomment %}
  <div class="sunzi-form-content">
    <div id="sunzi-node">
      <div class="sunzi-node-loading">
        <span class="dots">
          <i></i>
          <i></i>
          <i></i>
        </span>
      </div>
    </div>
  </div>
</div>

<!-- sunzi core js -->
<script crossorigin src="https://wuxian-chanpin.oss-accelerate.aliyuncs.com/sunzi/{{ coreJs }}" defer="defer"></script>

{% comment %} 渲染前执行 {% endcomment %}
<script defer="async">

</script>

{% comment %} 2.请求定制化数据 & 渲染 {% endcomment %}
<script defer="async">
  _sunzi_request('{{ requestURL }}', function(data) {
                 console.log(data)
    // 初始化数据
    initData(data);
    NamePuzzle.render(
      NamePuzzle.default,
      {
        ...data,
        shop: _sunzi_global_data.shop,
        async onConfirm(output) {
          // 唤醒loading
          _sunzi_loading();
        
          // 根据字母数量切换变体
          _sunzi_variant_change({{variantCount}}, output.value.length);
          // 根据颜色（存在）切换变体
		      if({{variantColor}} !== 100 && output.style)_sunzi_variant_change({{variantColor}}, output.style);
          // 组装加车参数
          var param = {
            '_sunzi_text_effect': output.preview,
            '_sunzi_text': {
                /* 刻字值 */
                value: output.value,
                /* 字体名称 */
                font: output.name
              }
          };

          $('#sunzi-input').val(JSON.stringify(param));
          $('#sunzi-cart').val(JSON.stringify({
            image: [ output.preview ]
          }));

          // 加车队列
          var _queue = [];
    
          // 加车事件触发
          await Promise.all(_queue);
          // 由于主产品涉及vip/质保产品等额外加车事件的判断，因此沿用站点加车方法
          $('.product-form__cart-submit').click();
      	  $('#sunzi-loading').hide();
        }
      },
      _matomoId,
      document.getElementById("sunzi-node")
    );
  });

  /** 其他自定义函数 start **/
  // 初始化数据
  function initData(data) {
    var productJSON = {{product | json}};
    var tags = {{product.tags | json}};
    var templateList = [];
    data.priceList =  productJSON.variants.map(item => {
      return {
        value: item.options[{{variantCount}}],
        price: item.price / 100
      };
    });
    if(tags && tags.indexOf("custom-sunzi-type-color") < 0) {
      data.layout.forEach(layoutItem => layoutItem.style == 1 && templateList.push(layoutItem.id.toString()));
      data.templateData = data.templateData.filter(templateItem => templateList.indexOf(templateItem.id) > -1);
    }
    console.log('data',data)
  }

  /** 其他自定义函数 end **/
</script>
