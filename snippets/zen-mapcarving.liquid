{{ 'zen-custom.scss.css' | asset_url | stylesheet_tag }}
<script src="{{ 'jquery-ui.min.js' | asset_url }}"></script>
<script src="{{ 'fabric.min.js' | asset_url }}"></script>
<script src="{{ 'konva.min.js' | asset_url }}"></script>
<script src="{{ 'fontfaceobserver.js' | asset_url }}"></script>
<script src="{{ 'qiniu.min.js' | asset_url }}" ></script>
<script src="{{ 'zen-base.js' | asset_url }}"></script>
<script src="{{ 'zen-carving.js' | asset_url }}"></script>
<script src="{{ 'zen-curvecarving.js' | asset_url }}"></script>

<div id="simple-photo-body" style="display:none;">
  <button type="button" class="close-new close custom-close" data-action="close">
    <i class="photofont icon photo-close"></i>
  </button>
  <div id="tabs" class="customer-photo">
    <ul style="display:none;">
      <li><a id="photo-carving"  data-index="0" href="#tabs-0">{{ 'zen.general.carving' | t }}</a></li>
      <li><a id="photo-loading" data-index="1" href="#tabs-1">{{ 'zen.general.loading' | t }}</a></li>
    </ul>
    <div id="tabs-0" class="carving-photo curve-carving">
     <div class="carvingcanvas-left">
      <canvas id="magcanvas"></canvas>
      </div> 
     <div class="carvingcanvas-right">
            <div class="carvingcanvas-content">
                <div class="curve-textarea">
                    <input type="text" id="textInput" class="textInput" placeholder="{{ 'zen.mapcarving.please_input_text' | t }}" disabled />
                     <p id="p_0" style="display:none;" class="left_num"><span class="num"></span>Left</p>
                </div>

                <div class="curve-textarea" style="display:none;">
                 <input type="text" id="maptext" class="textInput">
                 </div>
            </div>
            <div class="custom-size">
            <span class="sizefont">{{ 'zen.general.font_size' | t }}:</span>
            <select id="sizeSlt">
                    <option>20</option>
                    <option>30</option>
                    <option>40</option>
                    <option>50</option>
                    <option>60</option> 
            </select>
            </div>
             <div class="popups-font-family">
             <span class="font-title">{{ 'zen.general.font' | t }} :</span>
            <div class="font-list-flex">
                <div class="font-list active">
                <div class="carvingfont selected" style="font-family:TimesNewRoman;">{{ 'zen.general.abc' | t }}</div>
                <input class="cfont in-radio" type="radio" checked="" value="TimesNewRoman" name="fontradio">
                </div>
                <div class="font-list">
                <div class="carvingfont " style="font-family:AlluraRegular;">{{ 'zen.general.abc' | t }}</div>
                <input class="cfont in-radio" type="radio" value="AlluraRegular" name="fontradio">
                </div>
                <div class="font-list">
                <div class="carvingfont " style="font-family:AppleChancery;">{{ 'zen.general.abc' | t }}</div>
                <input class="cfont in-radio" type="radio" value="AppleChancery" name="fontradio">
                </div>
                <div class="font-list">
                <div class="carvingfont " style="font-family:holyunion;">{{ 'zen.general.abc' | t }}</div>
                <input class="cfont in-radio" type="radio" value="holyunion" name="fontradio">
                </div>
                <div class="font-list">
                <div class="carvingfont " style="font-family:NexaScript-Free;">{{ 'zen.general.abc' | t }}</div>
                <input class="cfont in-radio" type="radio" value="NexaScript-Free" name="fontradio">
                </div>
            </div>
        </div> 
       <button type="button" class="btn-confirm" id="btn-carving-comfirm">{{ 'zen.general.confirm' | t }}</button>
    </div>
       
    </div>
    <div id="tabs-1">
      <div id="cloading"><img class="cloadingimg" src="{{section.settings.upload_loading_image | img_url: 'master'}}" /><div class="sprogress"><div class="sbar" style="width: 0%;">0%</div></div></div>
    </div>
  </div>
</div>
<div class="lettering-box lettering-box-carving">
	<div class="Previewlettering Previewletteringcarving">
		<span class="Previewlettering-title">
			{{ 'zen.general.add_engravings' | t }} 
		</span>
		<span id="previewengravedtext"></span>
	</div>        
	<div class="after-preview-text">
		<span class="an-pri AddAnPri" id="AddAnPri" style="display:none;">+$5.99</span>
		<button type="button" id="addengraving">{{ 'zen.general.add' | t }}</button>
	</div>
	<div class="validation-advice" id="advice-validate-select-engraved" style="display: none; border: 0px solid rgb(235, 52, 10);">{{'zen.general.required_field' | t}}</div>
</div>
<input type="text" id="engraving-crop" name="properties[engravingCrop]" value="" style="display:none" /><!--效果图-->
<input type="text" id="engraving-text" name="properties[engravingText]" value="" style="display:none" />
<input type="text" id="engraving-size" name="properties[engravingSize]" value="" style="display:none" />
<input type="text" id="engraving-font" name="properties[engravingFont]" value="" style="display:none" />
<div id="container" style="display:none;"></div>
<script>
  $( "#tabs" ).tabs();
  var simpleModal = new tingle.modal({ 
    closeMethods: ['escape']
  });
  simpleModal.setContent('<div id="simple-photo-modal" class="simple--modal"></div>');
  $("#simple-photo-modal").html($('#simple-photo-body').contents());
  var jsonCustom = JSON.parse('{{ product.metafields["global"]["cattribute"] }}');
  //弧形--经纬度刻字
  //var jsonCustom = JSON.parse('{"type": "MapCarving", "secondType":"curve",  "coors":[{"path":"M54.8,213.5c0,0,80-52,136-38.7","textFontSize": 16}]}');
	//{"type": "MapCarving", "secondType":"default","coors": [{"left": 228, "top":164}, {"left": 228, "top":210}]}
	//{"type": "MapCarving", "secondType":"curve",  "path":  [{"path":"M54.8,213.5c0,0,80-52,136-38.7","textFontSize": 16}]}
  var mapCarving = "";                              
  //console.log(jsonCustom);
  if(jsonCustom.secondType == "default"){
    console.log(jsonCustom);
    mapCarving = new ucarving({
      "picurl": ubase.util.picurl,
      "canvasid" : "magcanvas",
      "type"  : 2,   //1:照片 2:刻字 3:照片+刻字
      "sku"   : "{{productItem}}",
      "in"    : "{{productItem}}-IN.png",
      "out"   : "{{productItem}}-OUT.png",
      //"left"  : 259,
      //"top"   : 208,
      "custom" : jsonCustom,
      "cWidth"     : 500,
      "cHeight"    : 400,
    });
  }else if(jsonCustom.secondType == "curve"){
    mapCarving = new curvecarving({
      "picurl": ubase.util.picurl,
      "canvasid" : "magcanvas",
      "type" : 2,   //1:照片 2:刻字 3:照片+刻字
      "sku" : "{{productItem}}",
      "baseImg"    : ubase.util.picurl + "img/textdesign/{{productItem}}-IN.png",
      "path" : jsonCustom.coors,
      "cWidth"     : 500,
      "cHeight"    : 400,
    });
  }
	$("#sizeSlt").change(function(){
    var _this = this;
    jsonCustom.coors.forEach(function(v,i){
      mapCarving.changeSize(i, $(_this).val());
    })
  });
  $(".cfont").click(function(){
    $(".font-list").removeClass('active');
	  $(this).parent().addClass("active");
    var _this = this;
    jsonCustom.coors.forEach(function(v,i){
      mapCarving.changeFont(i, $(_this).val());
    })
  });
  $.getScript("https://maps.googleapis.com/maps/api/js?key=AIzaSyAVZAWMMQ3yRzna-qdLZkjK48SRWW7fZoE&language=us&libraries=places", function(){
    $("#textInput").attr("disabled", false);
    var searchBox = new google.maps.places.SearchBox(document.getElementById("textInput"));
    searchBox.addListener('places_changed', function(e) {
      var places = searchBox.getPlaces();
      for(i=0; place=places[i]; i++){
        var lat = Math.floor(place.geometry.location.lat()*10000)/10000;
        var lng = Math.floor(place.geometry.location.lng()*10000)/10000;
        //console.log(jsonCustom.coors.length);
        if(jsonCustom.secondType == "default"){
          if(jsonCustom.coors.length == 1){
            var string = lat+"°N    "+lng+"°W";
            mapCarving.changeText(string, 0);
          }else{
            var string = lat+"°N|"+lng+"°W";
            mapCarving.changeText(lat+"°N", 0);
            mapCarving.changeText(lng+"°W", 1);
          }
        }else if(jsonCustom.secondType == "curve"){
          // console.log("curve");
          var string = lat+"°N       "+lng+"°W";
          mapCarving.changeText(string, 0);
        }
        $("#maptext").val(lat+"°N|"+lng+"°W");
        // console.log(string);
      }
    });
  });
  $(".lettering-box-carving").click(function(){
	  $("#tabs").tabs("option", "active", $('#photo-carving').data('index'));
	  simpleModal.open();
  });
  $("#btn-carving-comfirm").click(function(){
		if(jsonCustom.isOption==0 || jsonCustom.isOption==undefined){
			var flag = true;
			 if(!$("#textInput").val() || !$("#maptext").val()){
				 $(".curve-textarea").addClass('validation-warning'); 
				 flag = false;
			 }
			 if(!flag){
				 return flag;
			 }
		}
		
	$("#tabs").tabs("option", "active", $('#photo-loading').data('index'));
    var base64 = mapCarving.canvas.toDataURL({format: 'png', quality: 0.8});
    var blob = mapCarving.convertBase64ToBlob(base64);
		var filename = ubase.util.getFilename();
    mapCarving.cdnUpload(function(token){
      var key = ubase.util.prefix + filename + '.png';
      var observer = {
        next(result){
          $(".sbar").css({'width':parseInt(result.total.percent)+'%'});
		      $(".sbar").html(parseInt(result.total.percent)+'%'); 
        },
        error(err){
          alert("{{'zen.general.upload_error' | t}}");
        },
        complete(res){
				  console.log(ubase.util.cdnurl + res.key);
					$("#engraving-crop").val(ubase.util.cdnurl + res.key);
					$("#engraving-text").val($("#maptext").val());
					$("#engraving-size").val($("#sizeSlt").val());
					$("#engraving-font").val($("input[name='fontradio']:checked").val());
					$(".Previewlettering-title").html($("#maptext").val());
					$("#addengraving").text('Change');
					$(".sbar").css({'width':'0%'});
					$(".sbar").html('0%');
					simpleModal.close();
        }
      };
      var observable = qiniu.upload(blob, key, token, ubase.util.putExtra, ubase.util.config);
      observable.subscribe(observer);
    });
  });
  Product.validators.push(
    () => {
      return validateFormData();
    }
  );
  function validateFormData(){
    if(jsonCustom.isOption==0 || jsonCustom.isOption==undefined){
      if(!$("#textInput").val() || !$("#maptext").val()){
        $(".lettering-box-carving").addClass('validation-warning'); 
        return 'Validate MapCarving Error'
      }else{
        $(".lettering-box-carving").removeClass('validation-warning'); 
      }
    }
    return true;
  }
  $(document).ready(function(){ 
	$(document).trigger("hide-qty",1);
  });
</script>
<style scoped>

.canvas-container{    width: 100%!important;}
#magcanvas,.upper-canvas {width: 100%!important; height: auto!important;}
</style>