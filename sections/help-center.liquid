{% comment %} 
** @name  文章列表页面**
** @author 陈健辉 **
** @update 2021-11-16
** @remarks 暂无作者头像信息 **
{% endcomment %}

<style>
/* 隐藏全局搜索框 */
.search-container{
  display: none;
}

/* 顶部搜索栏模块 */
.article_module_search{
  padding: 20px;
  background: #F6F6F9;
}
.article_search_title{
  font-size: 32px;
  line-height: 48px;
  text-align: center;
  color: #222222;
}
.article_search{
  display: flex;
  align-items: center;
  padding: 6px 10px;
  background: #fff;
  box-shadow: 0 1px 1px 0 rgba(106, 102, 136, 0.08), 0 4px 16px 0 rgba(183,183,192,0.3);
  margin: 20px 0;
  border-radius: 4px;
  position: relative;
}
.article_search img{
  width: 20px;
  height: 20px;
}
.article_search input{
  border: none;
  background: transparent;
}
/* 搜索结果显示模块 */
.article_search_result {
  position: absolute;
  left: 0;
  width: 100%;
  background: #fff;
  bottom: -10px;
  transform: translateY(100%);
  z-index: 999;
  box-shadow: 0 1px 1px 0 rgba(106,102,136,0.08),
  0 4px 16px 0 rgba(183,183,192,0.3);
  border-radius: 4px;
  display: none;
  flex-direction: column;
  padding: 15px;
}
.article_search_text{
  font-size: 16px;
  line-height: 20px;
  color: #928FA5;
}
.article_search_loading {
  display: none;
  padding: 15px;
  margin: 0 auto;
}
.article_search_loading img{
  width: 36px;
  height: 36px;
}
.article_search_empty{
  padding: 15px 0;
  display: none;
  flex-direction: column;
  align-items: center;
  color: #222;
  font-size: 18px;
  line-height: 24px;
  text-align: center;
}
.article_search_empty img{
  width: 75px;
  height: 75px;
}
.search_empty_title{
  margin: 10px;
}
.search_empty_text{
  font-size: 12px;
  line-height: 20px;
  color: #928FA5;
}
.article_search_list{
  display: none;
}
.article_search_list.listShow{
  display: block;
}
.article_search_item{
  position: relative;
  margin: 15px 0;
  display: flex;
}
.article_search_left {
  display: flex;
  width: 75px;
  height: 75px;
  min-width: 75px;
  margin-right: 15px;
}
.article_search_left img{
  width: 100%;
  height: 100%;
  border-radius: 4px;
}
.search_item_title{
  font-size: 14px;
}
.search_item_author{
  color: #222;
  margin-top: 8px;
}
.article_search_btn{
  color: #222;
  border: 1px solid rgba(34,34,34,0.08);
  border-radius: 4px;
  padding: 10px 20px;
  font-size: 14px;
  margin: 0 auto;
  text-align: center;
}

/* 文章列表数据模块 */
.article_list_module{
  background: #fff;
  display: flex;
  flex-direction: column;
  padding: 20px;
  gap: 20px;
}
.article_item{
  background: rgba(246,246,249,0.5);
  border-radius: 4px;
  padding: 5px;
  color: #222222;
  line-height: 24px;
  position: relative;
  display: flex;
  flex-direction: column;
}
.article_img{
  border-radius: 4px;
  overflow: hidden;
  height: 200px;
  margin: 0 auto;
  width: 100%;
  background-size: cover;
  background-repeat: no-repeat;
}
.article_detail_module{
  padding: 5px;
}
.article_title{
  font-size: 16px;
}
.article_author_time{
  font-size: 12px;
  margin: 20px 0;
}
.article_time{
  color: #928FA5;
}
.article_detail{
  font-size: 13px;
  -webkit-line-clamp: 4;
}
/* 加载更多模块 */
.article_load_more{
  margin: 20px 0 80px;
  display: flex;
  flex-direction: column;
  align-items: center;
  color: #222222;
}
.article_current{
  font-size: 14px;
  line-height: 20px;
}
.article_load_btn{
  display: flex;
  align-items: center;
  margin-top: 10px;
  border: 1px solid rgba(34,34,34,0.08);
  background: #fff;
  font-size: 16px;
  padding: 4px 4px 4px 16px;
}

/* 多行省略号样式 */
.multiline_ellipsis{
  overflow: hidden;
  text-overflow: ellipsis;
  display: -webkit-box;
  -webkit-line-clamp: 2;
  -webkit-box-orient: vertical;
}

/* 遮罩层 */
.article_item::after,
.article_search_item::after{
  display: block;
  width: 100%;
  height: 100%;
  position: absolute;
  content: '';
  top: 0;
  left: 0;
  opacity: 0;
}

/* PC端样式 */
@media screen and (min-width: 768px) {
  /* PC端 顶部搜索栏模块 */
  .article_module_search{
    padding: 60px 30px;
  }
  .article_search_title,
  .article_search{
    max-width: 1200px;
    margin: 0 auto;
    padding: 8px 30px;
  }
  .article_search_title{
    margin-bottom: 20px;
  }
  /* PC端 搜索结果显示模块 */
  .article_search_result{
    padding: 30px;
  }
  .article_search_loading{
    padding: 30px;
  }
  .article_search_empty{
  padding: 30px 0;
  font-size: 24px;
  line-height: 32px;
  }
  .article_search_empty img{
    width: 100px;
    height: 100px;
  }
  .search_empty_title{
    margin: 15px;
  }
  .search_empty_text{
    font-size: 16px;
    line-height: 22px;
  }
  .article_search_list{
    position: relative;
    flex-wrap: wrap;
    gap: 20px;
    margin: 30px 0;
  }
  .article_search_list.listShow{
    display: flex;
  }
  .article_search_list::after{
    position: absolute;
    content: '';
    width: 1px;
    height: 100%;
    top: 0;
    left: 50%;
    background: rgba(34,34,34,0.08);
  }
  .article_search_item{
    width: 45%;
    flex-grow: 1;
    margin: 0;
    padding-right: 50px;
    cursor: pointer;
  }
  .article_search_item:nth-child(2n){
    padding-right: 0;
    padding-left: 50px;
  }
  .article_search_btn{
    cursor: pointer;
  }

  /* PC端 文章列表模块 */
  .article_list_module{
    flex-direction: row;
    max-width: 1260px;
    flex-wrap: wrap;
    margin: 0 auto;
    gap: 30px;
    padding: 60px 30px 20px;
  }
  .article_item{
    width: 380px;
  }
  .article_img{
    height: 260px;
  }
  .article_item,
  .article_load_btn{
    cursor: pointer;
  }
}
</style>

{% comment %} 顶部搜索模块 {% endcomment %}
<div class="article_module_search mm-header-height">
  {% comment %} 模块标题 {% endcomment %}
  <div class="article_search_title alifont_heavy">
    Advice and answers from the Mademine Team
  </div>
  {% comment %} 模块搜索框 {% endcomment %}
  <div class="article_search">
    <img src="{{ 'search.svg' | asset_url }}" alt="serach">
    <input
      class="alifont"
      type="text"
      placeholder="Search for articles"
      id="searchInput"
      value=""/>
    {% comment %} 搜索结果弹窗 {% endcomment %}
    <div class="article_search_result">
      {% comment %} 提示文字 {% endcomment %}
      <div class="article_search_text alifont_bold">Im looking for…</div>
      {% comment %} 加载中 {% endcomment %}
      <div class="article_search_loading"><img src="{{'Loading_icon.gif' | asset_url}}" /></div>
      {% comment %} 空数据 {% endcomment %}
      <div class="article_search_empty">
        <img src="{{'search_empty.png' | asset_img_url}}" alt="">
        <div class="search_empty_title">No results found！</div>
        <div class="search_empty_text">Try another keyword or check out articles that might interest you below...</div>
      </div>
      <div></div>
      {% comment %} 结果列表 {% endcomment %}
      <div class="article_search_list">
        {% comment %} JS动态渲染 {% endcomment %}
      </div>
      {% comment %} 展示按钮 {% endcomment %}
      <div class="article_search_btn alifont_bold">See matching articles（0）→</div>
    </div>
  </div>
</div>

{% comment %} 文字列表模块 {% endcomment %}
<div id="article_list_module" class="article_list_module">
  {% comment %} 文章列表数据通过JS动态渲染 {% endcomment %}
</div>

{% comment %} 加载更多模块 {% endcomment %}
<div class="article_load_more">
  {% comment %} 当前显示数据/总数量 {% endcomment %}
  <div class="article_current alifont">Show <span id="current_show" class="alifont_bold">0/0</span> tarticles</div>
  {% comment %} 加载按钮 {% endcomment %}
  <div id="article_load_btn" class="article_load_btn">
    <span class="alifont_bold">Show more</span>
    <img src="{{'next-bottom.svg' | asset_url}}" />
  </div>
</div>

{% comment %} 遮罩层 {% endcomment %}

<script>
const articleList = {{blog.articles | json}}; // 获取文章列表数据

let filterArticleList = []; // 过滤的列表数据
let searchValue = ''; // 搜索条件
let pageNum = 1; // 页码
let pageSize = 12; // 页容量
let total = articleList.length || 0; // 总数
let pages = Math.ceil(total / pageSize); // 总页数

/* 函数防抖 */
const debounce = (cb, time, that = null) => {
  let timer;
  return (...args) => {
      clearTimeout(timer);
      timer = setTimeout(function () {
          cb.apply(that, args);
      }, time)
  }
};

/* 输入框触发函数 */
const inputChange = debounce(() => {
  const value = $('#searchInput').val().trim();
  if(!value) {
    searchModel('hide');
    init();
    return;
  }
  searchModel('show');
  searchValue = value;
  filterArticleList = articleList.filter(item => {
    return item.title.toLowerCase().includes(value);
  });
  $('.article_search_loading').hide();
  /* 判断是否有搜索结果 */
  if(filterArticleList.length > 0) {
    $('.article_search_empty').css('display', 'none');
    loadMoreSearch(filterArticleList);
  }else {
    $('.article_search_list').removeClass('listShow');
    $('.article_search_list').children().remove(); // 清空子元素
    $('.article_search_btn').html(`Browse articles →`);
    $('.article_search_empty').css('display', 'flex');
  };
}, 500)

/* 搜索结果弹窗显隐 */
function searchModel(type = 'hide'){
  if(type === 'hide'){
    $('.article_search_result').css('display', 'none');
    $('.article_search_loading').hide();
  }else {
    $('.article_search_result').css('display', 'flex');
    $('.article_search_loading').show();
  }
}

/* 搜索框输入事件 */
$('#searchInput').on('input', inputChange);

/* 点击加载搜索结果列表 */
$('.article_search_btn').on('click', () => {
  searchModel('hide');
  if(filterArticleList.length === 0) return;
  pageNum = 1; // 页码
  total = filterArticleList.length || 0; // 总数
  pages = Math.ceil(total / pageSize); // 总页数
  $('#article_list_module').children().remove(); // 清空子元素
  load();
})

/* 点击加载更多事件 */
$('#article_load_btn').on('click', () => {
  pageNum++;
  load();
});

/* 初始化条件 */
function init(){
  filterArticleList = []; // 过滤的列表数据
  searchValue = ''; // 搜索条件
  pageNum = 1; // 页码
  total = articleList.length || 0; // 总数
  pages = Math.ceil(total / pageSize); // 总页数
  $('#article_list_module').children().remove(); // 清空子元素
  load();
}

/* load */
load();
function load(){
  // 判断是否已经加载全部数据
  if(pageNum >= pages){
    $('#article_load_btn').unbind('click');
    $('#article_load_btn').hide();
  };
  const start = (pageNum - 1) * pageSize;
  let end = pageNum * pageSize;
  end = end >= total ? total : end;
  const result = searchValue ? filterArticleList.slice(start, end) : articleList.slice(start, end);
  loadMore(result);
  $('#current_show').html(`${end}/${total}`);
}

/* 
 * 加载更多数据
 * @param listData 需要渲染的列表数据
 */
function loadMore(listData){
  let template = "";
  listData.forEach(item => {
    template += `
      <div class="article_item" data-handle="${item.handle}">
        <div class="article_img" ${item.image?.src ? `style="background-image: url(${item.image?.src})"`:''}></div>
        <div class="article_detail_module">
          <div class="article_title alifont_bold">${item.title}</div>
          <div class="article_author_time">
            <span class="article_author alifont_bold">${item.author}, </span>
            <span class="article_time alifont">${new Date(item.updated_at).toDateString()}</span>
          </div>
          <div class="article_detail multiline_ellipsis alifont">${item.summary_html}</div>
        </div>
      </div>
    `;
  });
  $('#article_list_module').append(template);
}

/* 
 * 搜索结果数据
 * @param listData 需要渲染的数据
 */
function loadMoreSearch(listData){
  let template = '';
    listData.slice(0, 4).forEach(item => {
      template += `
        <div class="article_search_item" data-handle="${item.handle}">
          <div class="article_search_left">
            ${item.image?.src ? `<img src="${item.image?.src}" alt="image">`:`<div />`}
          </div>
          <div class="article_search_right">
            <div class="search_item_title multiline_ellipsis alifong">${item.title}</div>
            <div class="search_item_author alifont"><span class="alifont_bold">${item.author}</span>, ${new Date(item.updated_at).toDateString()}</div>
          </div>
        </div>
      `
    })
    $('.article_search_loading').hide();
    $('.article_search_list').html(template);
    $('.article_search_btn').html(`See matching articles（${listData.length}）→`);
    $('.article_search_list').addClass('listShow');
}
/* 绑定列表数据模块点击事件 通过事件委托获取事件源 */
$('#article_list_module').on('click', handleEvent);
$('.article_search_list').on('click', handleEvent);
function handleEvent(event){
  const handle = event.target.dataset.handle;
  if(!handle) return; // 无事件源
  location.href = `/blogs/help-center/${handle}`;
}
</script>